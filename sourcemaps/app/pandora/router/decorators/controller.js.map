{"version":3,"sources":["app/pandora/router/decorators/controller.ts"],"names":[],"mappings":";;;AACA,mCAAkC;AAClC,kCAAsC;AACtC,0CAA+E;AAE/E,IAAY,aASX;AATD,WAAY,aAAa;IACrB,4BAAW,CAAA;IACX,8BAAa,CAAA;IACb,4BAAW,CAAA;IACX,kCAAiB,CAAA;IACjB,gCAAe,CAAA;IACf,oCAAmB,CAAA;IACnB,8BAAa,CAAA;IACb,4BAAW,CAAA;AACf,CAAC,EATW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QASxB;AAUD,SAAgB,cAAc,CAAC,KAAU;IACrC,IAAI,iBAAQ,CAAC,KAAK,CAAC,EAAE;QACjB,OAAO,CAAgD,MAAS,EAAE,EAAE;YAChE,MAAM,CAAC,wBAAa,CAAC,GAAG,KAAK,CAAC;YAC9B,MAAM,CAAC,6BAAkB,CAAC,GAAG,IAAI,CAAC;YAClC,kBAAW,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAChC,OAAO,MAAM,CAAC;QAClB,CAAC,CAAA;KACJ;SAAM;QACH,KAAK,CAAC,6BAAkB,CAAC,GAAG,IAAI,CAAC;QACjC,kBAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,OAAO,KAAK,CAAC;KAChB;AACL,CAAC;AAbD,wCAaC;AAAA,CAAC;AAEF,SAAgB,OAAO,CACnB,MAA4B,EAC5B,MAAkB,EAAE,GAAW,EAAE,KAA0C;IAE3E,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;QAAE,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC;KAAE;IACxC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;QAAE,MAAM,CAAC,OAAO,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;KAAE;IAC9D,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,wBAAa,CAAC,EAAE;QAAE,MAAM,CAAC,WAAW,CAAC,wBAAa,CAAC,GAAG,EAAE,CAAC;KAAE;IACnF,MAAM,CAAC,WAAW,CAAC,wBAAa,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;AACvF,CAAC;AARD,0BAQC;AAQD,SAAgB,cAAc,CAAC,GAAG,KAAY;IAC1C,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;QACV,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC;QACnC,OAAO,CAAC,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;KACnC;SAAM;QACH,OAAO,CAAC,MAAkB,EAAE,GAAW,EAAE,KAA0C,EAAE,EAAE;YACnF,MAAM,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;YACvB,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;QACxC,CAAC,CAAA;KACJ;AACL,CAAC;AAVD,wCAUC","file":"../../../../../app/pandora/router/decorators/controller.js","sourcesContent":["import { Controller } from 'egg';\nimport { isString } from 'lodash';\nimport { pandorouter } from '../core';\nimport { PANDORAROUTER, PANDORAROUTEREABLE, PANDORAROUTES } from '../preconst';\n\nexport enum RequestMethod {\n    GET = 'GET',\n    POST = 'POST',\n    PUT = 'PUT',\n    DELETE = 'DELETE',\n    PATCH = 'PATCH',\n    OPTIONS = 'OPTIONS',\n    HEAD = 'HEAD',\n    ALL = 'ALL',\n}\n\nexport interface RequestMappingOption {\n    path?: string;\n    methods?: (RequestMethod | string)[];\n    secret?: boolean;\n}\n\nexport function RestController<T extends (new (...props: any) => Controller)>(target: T): T;\nexport function RestController(path: string): <T extends (new (...props: any) => Controller) >(target: T) => T;\nexport function RestController(props: any) {\n    if (isString(props)) {\n        return <T extends (new (...props: any) => Controller)>(target: T) => {\n            target[PANDORAROUTER] = props;\n            target[PANDORAROUTEREABLE] = true;\n            pandorouter.routes.push(target);\n            return target;\n        }\n    } else {\n        props[PANDORAROUTEREABLE] = true;\n        pandorouter.routes.push(props);\n        return props;\n    }\n};\n\nexport function parserm(\n    config: RequestMappingOption,\n    target: Controller, key: string, descr: TypedPropertyDescriptor<Controller>,\n) {\n    if (!config.path) { config.path = key; }\n    if (!config.methods) { config.methods = [RequestMethod.ALL]; }\n    if (!target.constructor[PANDORAROUTES]) { target.constructor[PANDORAROUTES] = []; }\n    target.constructor[PANDORAROUTES].push({ config, action: descr.value, name: key });\n}\n\nexport function RequestMapping(\n    target: Controller, key: string,\n): void;\nexport function RequestMapping(options: RequestMappingOption): (\n    target: Controller, key: string,\n) => void;\nexport function RequestMapping(...props: any[]) {\n    if (props[1]) {\n        const [target, key, descr] = props;\n        parserm({}, target, key, descr);\n    } else {\n        return (target: Controller, key: string, descr: TypedPropertyDescriptor<Controller>) => {\n            const [config] = props;\n            parserm(config, target, key, descr);\n        }\n    }\n}\n"]}