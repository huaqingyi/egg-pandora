{"version":3,"sources":["app/pandora/router/src/handler/method-handler.ts"],"names":[],"mappings":"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","file":"../../../../../../app/pandora/router/src/handler/method-handler.js","sourcesContent":["'use strict';\n\nconst {\n    MIDDLEWARE_METADATA,\n    METHOD_METADATA,\n    PATH_METADATA } = require('../constants');\nconst RequestMethod = require('../enum/request-method');\n\nconst createMappingDecorator = Symbol('createMappingDecorator');\nconst createSingleDecorator = Symbol('createSingleDecorator');\nconst createArrayDecorator = Symbol('createArrayDecorator');\nconst mappingRequest = Symbol('mappingRequest');\n\nclass MethodHandler {\n    constructor(\n        public cMap\n    ) { }\n\n    getMetada(targetCb) {\n        const middlewares = Reflect.getMetadata(MIDDLEWARE_METADATA, targetCb) || [];\n        const reqMethod = Reflect.getMetadata(METHOD_METADATA, targetCb);\n        const path = Reflect.getMetadata(PATH_METADATA, targetCb);\n        return {\n            middlewares,\n            reqMethod,\n            path\n        };\n    }\n\n    middleware() {\n        return this[createArrayDecorator](MIDDLEWARE_METADATA);\n    }\n\n    get() {\n        return this[createMappingDecorator](RequestMethod.GET);\n    }\n\n    post() {\n        return this[createMappingDecorator](RequestMethod.POST);\n    }\n\n    put() {\n        return this[createMappingDecorator](RequestMethod.PUT);\n    }\n\n    delete() {\n        return this[createMappingDecorator](RequestMethod.DELETE);\n    }\n\n    patch() {\n        return this[createMappingDecorator](RequestMethod.PATCH);\n    }\n\n    options() {\n        return this[createMappingDecorator](RequestMethod.OPTIONS);\n    }\n\n    head() {\n        return this[createMappingDecorator](RequestMethod.HEAD);\n    }\n\n    all() {\n        return this[createMappingDecorator](RequestMethod.ALL);\n    }\n\n    [createMappingDecorator](method) {\n        return path => {\n            return this[mappingRequest]({\n                [PATH_METADATA]: path,\n                [METHOD_METADATA]: method,\n            });\n        };\n    }\n\n    [mappingRequest](metadata) {\n        const path = metadata[PATH_METADATA];\n        const reqMethod = metadata[METHOD_METADATA];\n\n        return (target, _key, descriptor) => {\n            this.cMap.set(target, target);\n            Reflect.defineMetadata(PATH_METADATA, path, descriptor.value);\n            Reflect.defineMetadata(METHOD_METADATA, reqMethod, descriptor.value);\n            return descriptor;\n        };\n    }\n\n    [createSingleDecorator](metadata) {\n        return value => {\n            return (target, _key, descriptor) => {\n                this.cMap.set(target, target);\n                Reflect.defineMetadata(metadata, value, descriptor.value);\n                return descriptor;\n            };\n        };\n    }\n\n    [createArrayDecorator](metadata) {\n        return values => {\n            return (_target, _key, descriptor) => {\n                const _values = Reflect.getOwnMetadata(metadata, descriptor.value) || [];\n                values = (values instanceof Array) ? values : [values];\n                values = values.concat(_values);\n                Reflect.defineMetadata(metadata, values, descriptor.value);\n                return descriptor;\n            };\n        };\n    }\n}\n\nmodule.exports = MethodHandler;\n"]}