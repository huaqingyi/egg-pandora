{"version":3,"sources":["app/pandora/swagger/document.ts"],"names":[],"mappings":"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","file":"../../../../app/pandora/swagger/document.js","sourcesContent":["import { Application } from 'egg';\nimport { readdirSync, readFileSync, statSync } from 'fs';\nimport { extname, join, sep } from 'path';\nimport _ from './constant';\nimport { map, groupBy } from 'lodash';\nimport swaggerUI from 'swagger-ui-koa';\nimport convert from 'koa-convert';\nimport mount from 'koa-mount';\nimport { validationMetadatasToSchemas } from 'class-validator-jsonschema';\n\nexport class Document {\n\n    constructor(\n        private app: Application,\n    ) {\n        this.buildDocument(this.app);\n    }\n\n    public buildDocument(app: Application) {\n        // config\n        const swagger: any = app.config.swagger;\n        if (!swagger || swagger.enable === false) { return {}; }\n\n        const securitys: any[] = [];\n        let tag_path: any = {\n            tags: [],\n            paths: {},\n        };\n\n        // 允许使用验证\n        if (swagger.enableSecurity) {\n            // 获取定义的安全验证名称\n            for (const security in swagger.securityDefinitions) {\n                securitys.push(security);\n            }\n        }\n\n        const filepath = join(app.config.baseDir, swagger.dirScanner);\n\n        // 递归获取 tags&paths\n        tag_path = this.parse(filepath, securitys, swagger);\n\n        // build document\n        const DOCUMENT = {\n            host: '',\n            swagger: _.SWAGGERVERSION,\n            basePath: swagger.basePath,\n            info: swagger.apiInfo,\n            schemes: swagger.schemes,\n            tags: tag_path.tags,\n            paths: tag_path.paths,\n            securityDefinitions: swagger.securityDefinitions,\n            definitions: validationMetadatasToSchemas(),\n        };\n\n        // console.log(DOCUMENT.paths['/home/index'].post);\n\n        app.use(swaggerUI.serve);\n        app.use(convert(mount(`/${swagger.DOCPath}`.replace('//', '/'), swaggerUI.setup(DOCUMENT))));\n        app.use(convert(mount(`/${swagger.DOCJSONPath}`.replace('//', '/'), async ctx => {\n            ctx.body = DOCUMENT;\n        })));\n\n        return DOCUMENT;\n    }\n\n    public generateCommentBlocks(filePath: string) {\n        const buffer = readFileSync(filePath);\n        const fileString = buffer.toString();\n        const block_regex = /\\/\\*\\*([\\s\\S]*?)\\*\\//gm;\n        const blocks = fileString.match(block_regex);\n        if (blocks) {\n            const result = blocks.filter(value => {\n                return value.indexOf('ontroller') > -1 || value.indexOf('outer') > -1 || value.indexOf('gnore') > -1;\n            });\n            return result;\n        }\n        return [];\n    }\n\n    public getComment(commentBlock, regex) {\n        const result: any[] = [];\n        const comment_lines = commentBlock.match(regex);\n        if (comment_lines) {\n            for (const comment_line of comment_lines) {\n                result.push(comment_line.slice(1, comment_line.length - 1).replace('\\r', '').split(' '));\n            }\n            return result;\n        }\n        return false;\n    }\n\n    public hasController(block: any) {\n        return block.indexOf('@Controller') > -1 || block.indexOf('@controller') > -1;\n    }\n\n    public generateAPIFunc(filepath: string) {\n        let func: any[] = [];\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        let obj = require(filepath);\n        if (extname(filepath) === '.ts') {\n            obj = obj.default;\n        }\n\n        const instance = obj.prototype || obj;\n        func = Object.getOwnPropertyNames(instance).map(key => {\n            return key;\n        });\n\n        if (func[0] === 'constructor') {\n            func.shift();\n        }\n\n        return func;\n    }\n\n    public isIgnore(block: string) {\n        return block.indexOf('@Ignore') > -1 || block.indexOf('@ignore') > -1;\n    }\n\n    public generateSummary(block: string) {\n        let summary = '';\n        const summarys = this.getComment(block, _.SUMMARY);\n        if (summarys) {\n            let m = 1;\n            while (summarys[0][m]) {\n                summary = summary + summarys[0][m] + ' ';\n                m++;\n            }\n        }\n        return summary;\n    }\n\n    public generateRequest(block: string, swagger: any) {\n        let request: any[] = [];\n        const produceComments = this.getComment(block, _.REQUEST);\n        if (produceComments) {\n            for (const item of produceComments) {\n                const rqs: any[] = [];\n                for (const key in item) {\n                    if (Number(key) === 0) continue;\n                    rqs.push(item[key]);\n                }\n                request.push(rqs);\n            }\n        } else {\n            request = swagger.request;\n        }\n        return request;\n    }\n\n    public formatRequest(request: string[][]) {\n        const { query, body, formData, path } = groupBy(map(request, ([rtype, type, name, desc, required]) => {\n            if (rtype === 'formdata') { rtype = 'formData'; }\n            return { name, type, required: !(required === 'false' || required === 'no'), in: rtype, description: desc };\n        }), 'in');\n        let rbody: any = { type: 'object', properties: {}, required: [] };\n        if (!formData) {\n            if (body) {\n                map(body, (b: any) => {\n                    rbody.properties[b.name] = { type: b.type, description: b.description };\n                    if (b.required === true) { rbody.required.push(b.name); }\n                });\n                rbody = [{ name: 'data', in: 'body', schema: rbody }];\n            } else {\n                rbody = [];\n            }\n        } else {\n            if (body) {\n                rbody = map(body, b => ({ ...b, in: 'formData' }));\n            } else rbody = [];\n        }\n        return [...(path || []), ...(query || []), ...(formData || []), ...rbody];\n    }\n\n    public generateResponse(block: string, swagger: any) {\n        let response: any[] = [];\n        const produceComments = this.getComment(block, _.RESPONSE);\n        if (produceComments) {\n            for (const item of produceComments) {\n                const rqs: any[] = [];\n                for (const key in item) {\n                    if (Number(key) === 0) continue;\n                    rqs.push(item[key]);\n                }\n                response.push(rqs);\n            }\n        } else {\n            response = swagger.response;\n        }\n        return response;\n    }\n\n    public generateDescription(block: string) {\n        let description: any = '';\n        const descriptions = this.getComment(block.replace(/^\\s+\\*\\s+^/gm, '\\n').replace(/^\\s+\\*\\s*/gm, ''), _.DESCRIPTION);\n        if (descriptions) {\n            let m = 1;\n            while (descriptions[0][m]) {\n                description = description + descriptions[0][m] + ' ';\n                m++;\n            }\n        }\n        return description;\n    }\n\n    public generateConsumes(block: string, swagger: any) {\n        let consumes: any[] = [];\n        const consumeComments = this.getComment(block, _.CONSUME);\n        if (consumeComments) {\n            for (const item of consumeComments) {\n                for (const key in item) {\n                    if (Number(key) === 0) continue;\n                    consumes.push(item[key]);\n                }\n            }\n        } else {\n            consumes = swagger.consumes;\n        }\n        return consumes;\n    }\n\n    public generateProduces(block: string, swagger: any) {\n        let produces: any[] = [];\n        const produceComments = this.getComment(block, _.PRODUCE);\n        if (produceComments) {\n            for (const item of produceComments) {\n                for (const key in item) {\n                    if (Number(key) === 0) continue;\n                    produces.push(item[key]);\n                }\n            }\n        } else {\n            produces = swagger.produces;\n        }\n        return produces;\n    }\n\n    public generateSecurity(block, securitys, swagger) {\n        const securityDoc: any[] = [];\n        for (const security of securitys) {\n            if (block.indexOf(`@${security}`) > -1) {\n                const securityItem = {};\n                if (swagger.securityDefinitions[security].type === 'apiKey') {\n                    securityItem[security] = [];\n                    securityItem[security].push(swagger.securityDefinitions[security]);\n                }\n                if (swagger.securityDefinitions[security].type === 'oauth2') {\n                    securityItem[security] = [];\n                    Object.keys(swagger.securityDefinitions[security].scopes).forEach(i => {\n                        securityItem[security].push(i);\n                    });\n                }\n                securityDoc.push(securityItem);\n            }\n        }\n        return securityDoc;\n    }\n\n    public isDeprecated(block: string) {\n        return block.indexOf('@Deprecated') > -1 || block.indexOf('@deprecated') > -1;\n    }\n\n    public parse(fileDir, securitys, swagger) {\n        // 已存在tag集合\n        const tagNames: string[] = [];\n        let tags: any[] = [];\n        const paths: any = {};\n        const names: any = readdirSync(fileDir);\n        for (const name of names) {\n\n            const filepath = join(fileDir, name);\n            const stat = statSync(filepath);\n\n            if (stat.isDirectory()) {\n                const subPath = this.parse(filepath, securitys, swagger);\n                // 合并子目录的扫描结果\n                tags = tags.concat(subPath.tags);\n                Object.assign(paths, subPath.paths);\n                continue;\n            }\n\n            if (stat.isFile() && ['.js', '.ts'].indexOf(extname(name)) !== -1) {\n\n                const fextname = extname(name);\n                if (fextname === '.ts') {\n                    const jsFile = name.replace('.ts', '.js');\n                    if (names.indexOf(jsFile) >= 0) {\n                        continue;\n                    }\n                }\n\n                const blocks = this.generateCommentBlocks(filepath);\n\n                // 如果第一个注释块不包含@controller不对该文件注释解析\n                if (blocks.length === 0 || !this.hasController(blocks[0])) continue;\n\n                // 当前注释块集合的所属tag-group, 并添加至swagger.tags中\n                const controller = this.getComment(blocks[0], _.CONTROLLER)[0];\n                let tagName = controller[1] ? controller[1] : name.split(/\\.(js|ts)/)[0];\n                if (tagNames.includes(tagName)) {\n                    tagName = tagName + '_' + tagNames.length;\n                }\n                tagNames.push(tagName);\n\n                tags.push({ name: tagName, description: controller[2] ? controller[2] : '' });\n\n                const func = this.generateAPIFunc(filepath);\n                const bundler: any = {\n                    filePath: filepath,\n                    routers: [],\n                };\n\n                const routerlist: any[] = [];\n                for (let i = 1; i < blocks.length; i++) {\n\n                    if (this.isIgnore(blocks[i])) continue;\n\n                    const direct = `${filepath.split(/\\.(js|ts)/)[0].split('app')[1].substr(1)}`;\n                    // 解析路由\n                    const routers = this.getComment(blocks[i], _.ROUTER);\n                    if (routers) {\n                        const path_method: any = {};\n                        path_method.tags = [tagName];\n                        path_method.summary = this.generateSummary(blocks[i]);\n                        path_method.description = this.generateDescription(blocks[i]);\n                        path_method.operationId = `${direct.replace(sep, '-')}-${func[i - 1]}`;\n                        path_method.consumes = this.generateConsumes(blocks[i], swagger);\n                        path_method.produces = this.generateProduces(blocks[i], swagger);\n\n                        const request = this.generateRequest(blocks[i], swagger);\n                        path_method.parameters = this.formatRequest(request);\n\n                        const response = this.generateResponse(blocks[i], swagger);\n                        path_method.responses = {};\n                        map(response, ([code, jname]) => {\n                            if (code) {\n                                if (!jname) { jname = 'object'; }\n                                let jtype = validationMetadatasToSchemas()[jname] || jname;\n                                if (jname === 'object') { jtype = { type: 'object' }; }\n                                if (jname === 'array') { jtype = { type: 'array' }; }\n                                if (jname === 'boolean') { jtype = { type: 'boolean', enum: [true, false] }; }\n                                if (jname === 'number') { jtype = { type: 'number' }; }\n                                path_method.responses[code] = jtype;\n                            }\n                        });\n\n                        path_method.security = this.generateSecurity(blocks[i], securitys, swagger);\n                        path_method.deprecated = this.isDeprecated(blocks[i]);\n\n                        if (!routerlist.includes(routers[0][2])) {\n                            paths[routers[0][2]] = {};\n                        }\n\n                        routerlist.push(routers[0][2]);\n                        paths[routers[0][2]][routers[0][1].toLowerCase()] = path_method;\n\n                        const router = {\n                            method: routers[0][1].toLowerCase(),\n                            route: routers[0][2],\n                            func: func[i - 1],\n                        };\n                        bundler.routers.push(router);\n                    }\n                }\n            }\n        }\n\n        return {\n            tags,\n            paths,\n        };\n    }\n}\n"]}